# Full configuration options can be found at https://www.nomadproject.io/docs/configuration

datacenter  = "dc1"
region      = "southeast.asia.global"
data_dir    = "/opt/nomad/data"
bind_addr   = "0.0.0.0"

client {
  enabled = true

  # https://discuss.hashicorp.com/t/how-to-change-unique-network-ip-address-for-a-node/22696
  # https://developer.hashicorp.com/nomad/docs/configuration/client#network_interface
  network_interface = "enp0s8"

  options {
    "driver.raw_exec.enable"    = "1"
    "docker.privileged.enabled" = "true"
  }
}

advertise {
  http = "{{ ansible_enp0s8['ipv4']['address'] }}"
  rpc  = "{{ ansible_enp0s8['ipv4']['address'] }}"
  serf = "{{ ansible_enp0s8['ipv4']['address'] }}"
}

acl {
  enabled = true
}

{% if vault_mtls_token is defined %}
tls {
  http = true
  rpc  = true

  ca_file   = "/opt/nomad/agent-certs/ca.crt"
  cert_file = "/opt/nomad/agent-certs/agent.crt"
  key_file  = "/opt/nomad/agent-certs/agent.key"

  verify_server_hostname = true
  verify_https_client = true
  rpc_upgrade_mode = true
}

{% endif %}
consul {
  address             = "127.0.0.1:8500"
  auto_advertise      = true
  client_service_name = "{{ ansible_hostname }}"
  client_auto_join    = true
}

plugin "raw_exec" {
  enabled = true
}

# https://developer.hashicorp.com/nomad/docs/drivers/docker#client-requirements

plugin "docker" {
  config {
    endpoint = "unix:///run/user/{{ docker_user_info.uid }}/docker.sock"

# This auth is used to put custom registry authentication
#    auth {
#      config = "/etc/docker-auth.json"
#      helper = "ecr-login"
#    }

    extra_labels = ["job_name", "job_id", "task_group_name", "task_name", "namespace", "node_name", "node_id"]

    gc {
      image       = true
      image_delay = "3m"
      container   = true

      dangling_containers {
        enabled        = true
        dry_run        = false
        period         = "5m"
        creation_grace = "5m"
      }
    }

    volumes {
      enabled      = true
      selinuxlabel = "z"
    }

    allow_privileged = false
    allow_caps       = ["chown", "net_raw"]
  }
}

telemetry {
  publish_allocation_metrics = true
  publish_node_metrics       = true
  prometheus_metrics         = true
}
