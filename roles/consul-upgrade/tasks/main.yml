---
- name: Create consul snapshot for backup
  shell: consul snapshot save consul-backup.snap
  retries: 3
  delay: 3
  register: consul_snap
  until: consul_snap.rc == 0

- name: Inspect the created snapshot
  shell: consul snapshot inspect consul-backup.snap
  register: backup_snap_inpection

- name: Save consul snapshot inspection to file
  copy:
    content: "{{ backup_snap_inpection.stdout }}"
    dest: consul-backup.inspect

- name: Enabling debug level
  lineinfile:
    path: /etc/consul.d/consul.hcl
    line: "log_level       = \"DEBUG\""
    regexp: "^log_level\\s+=\\s+\"DEBUG\"$"
    insertafter: "EOF"
    state: present

- name: Reload Consul
  shell: consul reload

- name: Check who is current leader
  shell: consul operator raft list-peers | grep leader

- name: Leave from the cluster
  shell: consul leave

- name: Download new version binary of consul
  apt:
    name: "consul={{ consul_version }}"
    state: present
    update_cache: true

- name: Disabling debug level
  lineinfile:
    path: /etc/consul.d/consul.hcl
    regexp: "log_level\\s+=\\s+\"DEBUG\""
    state: absent

- name: Restart Consul
  systemd:
    name: consul
    state: restarted
    enabled: true
    daemon_reload: yes

- name: Check current consul version
  shell: consul version | head -n1 | cut -d 'v' -f 2
  register: consul_version_check

- name: Fail when version is not upgraded
  fail:
    msg: "Consul version is not match. Current version is {{ consul_version_check.stdout }}"
  when: consul_version_check.stdout != consul_version|split('-')|first

- name: Wait until this consul alive
  shell: "consul members | grep {{ ansible_hostname }} | sed 's/  */ /g' | cut -d ' ' -f 3 | xargs"
  register: consul_stat
  until: consul_stat.stdout == 'alive'
  retries: 3
  delay: 3

- name: Check is consul server or client
  shell: "consul members | grep {{ ansible_hostname }} | sed 's/  */ /g' | cut -d ' ' -f 4 | xargs"
  register: consul_mode

- name: Wait until this consul can vote
  shell: "consul operator raft list-peers | grep {{ ansible_hostname }} | sed 's/  */ /g' | cut -d ' ' -f 5 | xargs"
  register: list_peers
  when: consul_mode.stdout == 'server'
  until: list_peers.stdout|bool == true
  retries: 5
  delay: 4

- name: Get to be checked consul service
  shell: consul catalog services | head -1 | xargs
  register: consul_service

- name: Get to be checked consul datacenters
  shell: consul catalog datacenters | head -1 | xargs
  register: consul_datacenter

- name: Dig test consul service
  shell: "dig @127.0.0.1 -p 8600 {{ consul_service.stdout|trim }}.service.{{ consul_datacenter.stdout|trim }}.consul. ANY | grep ANSWER |  cut -d ' ' -f 9 |  sed 's/,//' |  xargs"
  register: dig_test

- debug:
    msg: Dig test success
  when: dig_test.stdout|int > 0

- fail:
    msg: Dig test failed
  when: dig_test.stdout|int < 1
